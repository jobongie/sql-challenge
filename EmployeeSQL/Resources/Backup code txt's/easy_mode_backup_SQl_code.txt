## EASY MODE

Import into pandas
create table then
create keys
JUSTIN showed storing M and F as Boolean in class
IN Class - date time use -1 for input to_char(datetime)
hist for name freq
vert =False barchart
Herc first & last name contain both M and F
emp_ID is April Fools Day
index constraints




-- -- ORDER NEEDED TO DROP TABLES DUE TO KEYS
-- DROP TABLE salaries;
-- DROP TABLE dept_manager;
-- DROP TABLE dept_emp;
-- DROP TABLE employees;
-- DROP TABLE titles;
-- DROP TABLE departments;


-- CREATE TABLE "departments" (
--     "dept_num" VARCHAR   NOT NULL,
--     "dept_name" VARCHAR   NOT NULL,
--     CONSTRAINT "pk_departments" PRIMARY KEY (
--         "dept_num"
--      )
-- );

-- CREATE TABLE "titles" (
--     "title_id" VARCHAR   NOT NULL,
--     "title" VARCHAR   NOT NULL,
--     CONSTRAINT "pk_titles" PRIMARY KEY (
--         "title_id"
--      )
-- );

-- CREATE TABLE "employees" (
--     "emp_num" INTEGER   NOT NULL,
--     "title_id" VARCHAR   NOT NULL,
--     "birth_date" VARCHAR   NOT NULL,
--     "first_name" VARCHAR   NOT NULL,
--     "last_name" VARCHAR   NOT NULL,
--     "sex" CHAR(1)   NOT NULL,
--     "hire_date" DATE   NOT NULL,
--     CONSTRAINT "pk_employees" PRIMARY KEY (
--         "emp_num"
--      )
-- );

-- CREATE TABLE "dept_emp" (
--     "emp_num" INTEGER   NOT NULL,
--     "dept_num" VARCHAR   NOT NULL
-- );

-- CREATE TABLE "dept_manager" (
--     "dept_num" VARCHAR   NOT NULL,
--     "emp_num" INTEGER   NOT NULL
-- );

-- CREATE TABLE "salaries" (
--     "emp_num" INTEGER   NOT NULL,
--     "salary" INTEGER   NOT NULL
-- );

-- ALTER TABLE "employees" ADD CONSTRAINT "fk_employees_title_id" FOREIGN KEY("title_id")
-- REFERENCES "titles" ("title_id");

-- ALTER TABLE "dept_emp" ADD CONSTRAINT "fk_dept_emp_emp_num" FOREIGN KEY("emp_num")
-- REFERENCES "employees" ("emp_num");

-- ALTER TABLE "dept_emp" ADD CONSTRAINT "fk_dept_emp_dept_num" FOREIGN KEY("dept_num")
-- REFERENCES "departments" ("dept_num");

-- ALTER TABLE "dept_manager" ADD CONSTRAINT "fk_dept_manager_dept_num" FOREIGN KEY("dept_num")
-- REFERENCES "departments" ("dept_num");

-- ALTER TABLE "dept_manager" ADD CONSTRAINT "fk_dept_manager_emp_num" FOREIGN KEY("emp_num")
-- REFERENCES "employees" ("emp_num");

-- ALTER TABLE "salaries" ADD CONSTRAINT "fk_salaries_emp_num" FOREIGN KEY("emp_num")
-- REFERENCES "employees" ("emp_num");

-- -- Verify using countrows under table

-- -- 1. List the following details of each employee: employee number, last name, first name, sex, and salary.

-- SELECT employees.emp_num, last_name, first_name, sex, salary
-- FROM employees
-- INNER JOIN salaries ON salaries.emp_num = employees.emp_num;

-- -- 2. List first name, last name, and hire date for employees who were hired in 1986.

-- SELECT first_name, last_name, hire_date
-- FROM employees
-- WHERE hire_date BETWEEN '01/01/1986' AND '01/01/1987';

-- -- 3. List the manager of each department with the following information: department number, department name, the manager's employee number, last name, first name.

-- SELECT departments.dept_num, departments.dept_name, dept_manager.emp_num, employees.last_name, employees.first_name
-- FROM departments
-- JOIN dept_manager
-- ON departments.dept_num = dept_manager.dept_num
-- JOIN employees
-- ON dept_manager.emp_num = employees.emp_num;

-- -- 4. List the department of each employee with the following information: employee number, last name, first name, and department name.

-- SELECT dept_emp.emp_num, employees.last_name, employees.first_name, departments.dept_name
-- FROM dept_emp
-- JOIN employees
-- ON dept_emp.emp_num = employees.emp_num
-- JOIN departments
-- ON dept_emp.dept_num = departments.dept_num;

-- -- 5. List first name, last name, and sex for employees whose first name is "Hercules" and last names begin with "B."

-- SELECT first_name, last_name, sex
-- FROM employees
-- WHERE first_name = 'Hercules'
-- AND last_name LIKE 'B%';

-- -- 6. List all employees in the Sales department, including their employee number, last name, first name, and department name.

-- SELECT dept_emp.emp_num, employees.last_name, employees.first_name, departments.dept_name
-- FROM dept_emp
-- JOIN employees
-- ON dept_emp.emp_num = employees.emp_num
-- JOIN departments
-- ON dept_emp.dept_num = departments.dept_num
-- WHERE departments.dept_name = 'Sales';

-- -- 7. List all employees in the Sales and Development departments, including their employee number, last name, first name, and department name.

-- SELECT dept_emp.emp_num, employees.last_name, employees.first_name, departments.dept_name
-- FROM dept_emp
-- JOIN employees
-- ON dept_emp.emp_num = employees.emp_num
-- JOIN departments
-- ON dept_emp.dept_num = departments.dept_num
-- WHERE departments.dept_name = 'Sales' 
-- OR departments.dept_name = 'Development';

-- -- 8. In descending order, list the frequency count of employee last names, i.e., how many employees share each last name.
-- SELECT last_name,
-- COUNT(last_name) AS "frequency"
-- FROM employees
-- GROUP BY last_name
-- ORDER BY
-- COUNT(last_name) DESC;